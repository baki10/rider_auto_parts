<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xsi:schemaLocation="
          http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
          http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

    <import resource="jms-setup.xml"/>

    <!-- enable Spring @Component scan -->
    <context:component-scan base-package="com.bakigoal.spring"/>

    <camel:camelContext id="camel" xmlns="http://camel.apache.org/schema/spring">

        <!-- let Camel use those @Component scanned route builders -->
        <contextScan/>

        <dataFormats>
            <json id="json" library="Jackson"/>
        </dataFormats>

        <route>
            <from uri="jetty://http://0.0.0.0:8080/order"/>
            <bean ref="orderService" method="lookup"/>
            <marshal ref="json"/>
        </route>

        <!--<endpoint id="ridersFtp" uri="ftp://rider.com/orders?username=rider&password=secret"/>-->

        <!--<routeBuilder ref="ftpToJmsRoute"/>-->

        <!--<route>-->
        <!--<from ref="ridersFtp"/>-->
        <!--<process ref="downloadLogger"/>-->
        <!--<to uri="jms:incomingOrders"/>-->
        <!--</route>-->
        <!--<route>-->
        <!--<from uri="jms:incomingOrders"/>-->
        <!--<process ref="downloadLogger"/>-->
        <!--</route>-->

        <!--<packageScan>-->
        <!--<package>com.bakigoal.spring.route</package>-->
        <!--<excludes>**.*Excluded*</excludes>-->
        <!--<includes>**.*</includes>-->
        <!--</packageScan>-->
    </camel:camelContext>

</beans>